{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salty\\\\Documents\\\\GitHub\\\\Collector\\\\src\\\\contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { auth, db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password, username) {\n    try {\n      auth.createUserWithEmailAndPassword(email, password).then(function (result) {\n        //Upon a successful user creation we store the unique username into the database\n        addDisplayName(username); //We update the user display name in the user context\n\n        result.user.updateProfile({\n          displayName: username\n        });\n      }).catch(error => {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            alert('Email already in use !');\n            break;\n\n          default:\n            break;\n        }\n      });\n    } catch (err) {\n      alert(\"Error : \", err);\n      return err;\n    }\n  }\n\n  async function addDisplayName(username) {\n    await db.users.add({\n      displayName: username,\n      uid: currentUser.uid\n    });\n  }\n\n  function login(email, password) {\n    console.log(auth.signInWithEmailAndPassword(email, password));\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setLoading(false);\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    //updateUsername,\n    signup\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AuthProvider, \"pVIE1MZkE1bnnl412B65WESiG3c=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/salty/Documents/GitHub/Collector/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","db","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","username","createUserWithEmailAndPassword","then","result","addDisplayName","user","updateProfile","displayName","catch","error","code","alert","err","users","add","uid","login","console","log","signInWithEmailAndPassword","unsubscribe","onAuthStateChanged","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAASC,IAAT,EAAcC,EAAd,QAAuB,aAAvB;;AAEA,MAAMC,WAAW,gBAACN,KAAK,CAACO,aAAN,EAAlB;AAEA,OAAO,SAASC,OAAT,GAAkB;AAAA;;AACrB,SAAOP,UAAU,CAACK,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAkC;AAAA;;AACrC,QAAK,CAACC,WAAD,EAAaC,cAAb,IAA6BV,QAAQ,EAA1C;AACA,QAAK,CAACW,OAAD,EAASC,UAAT,IAAqBZ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASa,MAAT,CAAgBC,KAAhB,EAAsBC,QAAtB,EAAgCC,QAAhC,EAAyC;AACrC,QAAI;AACAd,MAAAA,IAAI,CAACe,8BAAL,CAAoCH,KAApC,EAA0CC,QAA1C,EACCG,IADD,CAEA,UAASC,MAAT,EAAiB;AACb;AACAC,QAAAA,cAAc,CAACJ,QAAD,CAAd,CAFa,CAGb;;AACJG,QAAAA,MAAM,CAACE,IAAP,CAAYC,aAAZ,CAA0B;AACtBC,UAAAA,WAAW,EAAEP;AADS,SAA1B;AAGC,OATD,EASGQ,KATH,CASSC,KAAK,IAAI;AACd,gBAAOA,KAAK,CAACC,IAAb;AACI,eAAK,2BAAL;AACIC,YAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;;AACJ;AACI;AALR;AAOC,OAjBL;AAkBH,KAnBD,CAmBE,OAAMC,GAAN,EAAW;AACTD,MAAAA,KAAK,CAAC,UAAD,EAAaC,GAAb,CAAL;AACA,aAAOA,GAAP;AACH;AAEJ;;AAED,iBAAeR,cAAf,CAA8BJ,QAA9B,EAAuC;AACnC,UAAMb,EAAE,CAAC0B,KAAH,CAASC,GAAT,CAAa;AACfP,MAAAA,WAAW,EAAEP,QADE;AAEfe,MAAAA,GAAG,EAAEtB,WAAW,CAACsB;AAFF,KAAb,CAAN;AAIH;;AAGD,WAASC,KAAT,CAAelB,KAAf,EAAqBC,QAArB,EAA8B;AAC1BkB,IAAAA,OAAO,CAACC,GAAR,CAAYhC,IAAI,CAACiC,0BAAL,CAAgCrB,KAAhC,EAAsCC,QAAtC,CAAZ;AACA,WAAOb,IAAI,CAACiC,0BAAL,CAAgCrB,KAAhC,EAAsCC,QAAtC,CAAP;AACH;;AAEDd,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMmC,WAAW,GAAClC,IAAI,CAACmC,kBAAL,CAAwBhB,IAAI,IAAE;AAC5CT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,cAAc,CAACW,IAAD,CAAd;AACH,KAHiB,CAAlB;AAIA,WAAOe,WAAP;AACH,GANQ,EAMP,EANO,CAAT;AAQA,QAAME,KAAK,GAAE;AACT7B,IAAAA,WADS;AAETuB,IAAAA,KAFS;AAGT;AACAnB,IAAAA;AAJS,GAAb;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEyB,KAA7B;AAAA,cACK,CAAC3B,OAAD,IAAYH;AADjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IA/DeD,Y;;KAAAA,Y","sourcesContent":["import React,{ useContext, useState, useEffect} from 'react'\r\nimport { auth,db } from'../firebase'\r\n\r\nconst AuthContext=React.createContext()\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n    const[currentUser,setCurrentUser]=useState()\r\n    const[loading,setLoading]=useState(true)\r\n\r\n    function signup(email,password, username){\r\n        try {\r\n            auth.createUserWithEmailAndPassword(email,password)\r\n            .then(\r\n            function(result) {\r\n                //Upon a successful user creation we store the unique username into the database\r\n                addDisplayName(username)\r\n                //We update the user display name in the user context\r\n            result.user.updateProfile({\r\n                displayName: username\r\n            })\r\n            }).catch(error => {   \r\n                switch(error.code) {\r\n                    case 'auth/email-already-in-use':\r\n                        alert('Email already in use !')\r\n                        break;\r\n                    default:\r\n                        break;\r\n                    }\r\n                })\r\n        } catch(err) {\r\n            alert(\"Error : \", err);\r\n            return err;\r\n        }\r\n        \r\n    }\r\n\r\n    async function addDisplayName(username){\r\n        await db.users.add({\r\n            displayName: username,\r\n            uid: currentUser.uid\r\n        })\r\n    }\r\n\r\n\r\n    function login(email,password){\r\n        console.log(auth.signInWithEmailAndPassword(email,password));\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        const unsubscribe=auth.onAuthStateChanged(user=>{\r\n            setLoading(false)\r\n            setCurrentUser(user)\r\n        })\r\n        return unsubscribe\r\n    },[])\r\n\r\n    const value ={\r\n        currentUser,\r\n        login,\r\n        //updateUsername,\r\n        signup\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}